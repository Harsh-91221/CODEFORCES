// Input
// 5
// ........
// ........
// ........
// ........
// ...i....
// ........
// ........
// ........
// ........
// .l......
// .o......
// .s......
// .t......
// ........
// ........
// ........
// ........
// ........
// ........
// ........
// ......t.
// ......h.
// ......e.
// ........
// ........
// ........
// ........
// ........
// .......g
// .......a
// .......m
// .......e
// a.......
// a.......
// a.......
// a.......
// a.......
// a.......
// a.......
// a.......

// Output
// i
// lost
// the
// game
// aaaaaaaa

/*On an 8×8grid of dots, a word consisting of lowercase Latin letters is written vertically in one column,
from top to bottom. What is it?
Each test case consists of 8 lines, each containing 8 characters.
Each character in the grid is either .(representing a dot) or a lowercase Latin letter (a–z).
The word lies entirely in a single column and is continuous from the beginning to the ending (without gaps). */

#include <iostream>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        char grid[8][8];
        for (int i = 0; i < 8; i++)
        {
            for (int j = 0; j < 8; j++)
            {
                cin >> grid[i][j];
            }
        }
        // FOR FINDING WORD IN COLUMN
        string word = "";
        for (int j = 0; j < 8; j++)
        {
            for (int i = 0; i < 8; i++)
            {
                if (grid[i][j] != '.')
                {
                    word = word + grid[i][j];
                }
            }
        }
        cout << word << endl;
    }
    return 0;
}